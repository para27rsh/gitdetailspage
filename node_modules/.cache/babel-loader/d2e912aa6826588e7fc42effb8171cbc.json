{"ast":null,"code":"import axios from \"axios\";\nexport const GET_USERS_REQUEST = \"GET_USERS_REQUEST\";\nexport const GET_USERS_SUCCESS = \"GET_USERS_SUCCESS\";\nexport const GET_USERS_FAILURE = \"GET_USERS_FAILURE\";\nexport const SEARCH_USERS_REQUEST = \"SEARCH_USERS_REQUEST\";\nexport const SEARCH_USERS_SUCCESS = \"SEARCH_USERS_SUCCESS\";\nexport const SEARCH_USERS_FAILURE = \"SEARCH_USERS_FAILURE\";\nexport const REQUESTING = \"Requesting\";\nexport const SUCCESS = \"Success\";\nexport const ERROR = \"Error\";\nexport function getUsersRequest() {\n  return {\n    type: GET_USERS_REQUEST,\n    status: REQUESTING\n  };\n}\nexport function getUsersSuccess(userDetails) {\n  return {\n    type: GET_USERS_SUCCESS,\n    status: SUCCESS,\n    userDetails\n  };\n}\nexport function getUsersFailure(error) {\n  return {\n    type: GET_USERS_FAILURE,\n    status: ERROR,\n    error\n  };\n}\nexport function getUsers() {\n  return async (dispatch, getState) => {\n    dispatch(getUsersRequest());\n\n    try {\n      const result = await axios.get(\"https://api.github.com/users/supreetsingh247\");\n      const resultJson = result;\n\n      if (resultJson.error) {\n        throw new Error(resultJson.error);\n      }\n\n      return dispatch(getUsersSuccess(resultJson.data));\n    } catch (e) {\n      dispatch(getUsersFailure(e.message));\n    }\n  };\n}\nexport function searchUsersRequest() {\n  return {\n    type: SEARCH_USERS_REQUEST,\n    status: REQUESTING\n  };\n}\nexport function searchUsersSuccess(userDetails) {\n  return {\n    type: SEARCH_USERS_SUCCESS,\n    status: SUCCESS,\n    userDetails\n  };\n}\nexport function searchUsersFailure(error) {\n  return {\n    type: SEARCH_USERS_FAILURE,\n    status: ERROR,\n    error\n  };\n}\nexport function searchUsers(user) {\n  return async (dispatch, getState) => {\n    dispatch(searchUsersRequest());\n\n    try {\n      const result = await axios.get(\"http://api.github.com/search/users?q=\".concat(user));\n      const resultJson = result;\n\n      if (resultJson.error) {\n        throw new Error(resultJson.error);\n      }\n\n      return dispatch(searchUsersSuccess(resultJson.data));\n    } catch (e) {\n      dispatch(searchUsersFailure(e.message));\n    }\n  };\n}","map":{"version":3,"sources":["/home/shivamxelp/git-mini-project/src/actions/user.action.js"],"names":["axios","GET_USERS_REQUEST","GET_USERS_SUCCESS","GET_USERS_FAILURE","SEARCH_USERS_REQUEST","SEARCH_USERS_SUCCESS","SEARCH_USERS_FAILURE","REQUESTING","SUCCESS","ERROR","getUsersRequest","type","status","getUsersSuccess","userDetails","getUsersFailure","error","getUsers","dispatch","getState","result","get","resultJson","Error","data","e","message","searchUsersRequest","searchUsersSuccess","searchUsersFailure","searchUsers","user"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,KAAK,GAAG,OAAd;AACP,OAAO,SAASC,eAAT,GAA2B;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAEV,iBADD;AAELW,IAAAA,MAAM,EAAEL;AAFH,GAAP;AAID;AACD,OAAO,SAASM,eAAT,CAAyBC,WAAzB,EAAsC;AAC3C,SAAO;AACLH,IAAAA,IAAI,EAAET,iBADD;AAELU,IAAAA,MAAM,EAAEJ,OAFH;AAGLM,IAAAA;AAHK,GAAP;AAKD;AACD,OAAO,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AACrC,SAAO;AACLL,IAAAA,IAAI,EAAER,iBADD;AAELS,IAAAA,MAAM,EAAEH,KAFH;AAGLO,IAAAA;AAHK,GAAP;AAKD;AACD,OAAO,SAASC,QAAT,GAAoB;AACzB,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnCD,IAAAA,QAAQ,CAACR,eAAe,EAAhB,CAAR;;AACA,QAAI;AACF,YAAMU,MAAM,GAAG,MAAMpB,KAAK,CAACqB,GAAN,gDAArB;AAGA,YAAMC,UAAU,GAAGF,MAAnB;;AACA,UAAIE,UAAU,CAACN,KAAf,EAAsB;AACpB,cAAM,IAAIO,KAAJ,CAAUD,UAAU,CAACN,KAArB,CAAN;AACD;;AACD,aAAOE,QAAQ,CAACL,eAAe,CAACS,UAAU,CAACE,IAAZ,CAAhB,CAAf;AACD,KATD,CASE,OAAOC,CAAP,EAAU;AACVP,MAAAA,QAAQ,CAACH,eAAe,CAACU,CAAC,CAACC,OAAH,CAAhB,CAAR;AACD;AACF,GAdD;AAeD;AACD,OAAO,SAASC,kBAAT,GAA8B;AACnC,SAAO;AACLhB,IAAAA,IAAI,EAAEP,oBADD;AAELQ,IAAAA,MAAM,EAAEL;AAFH,GAAP;AAID;AACD,OAAO,SAASqB,kBAAT,CAA4Bd,WAA5B,EAAyC;AAC9C,SAAO;AACLH,IAAAA,IAAI,EAAEN,oBADD;AAELO,IAAAA,MAAM,EAAEJ,OAFH;AAGLM,IAAAA;AAHK,GAAP;AAKD;AACD,OAAO,SAASe,kBAAT,CAA4Bb,KAA5B,EAAmC;AACxC,SAAO;AACLL,IAAAA,IAAI,EAAEL,oBADD;AAELM,IAAAA,MAAM,EAAEH,KAFH;AAGLO,IAAAA;AAHK,GAAP;AAKD;AACD,OAAO,SAASc,WAAT,CAAqBC,IAArB,EAA2B;AAChC,SAAO,OAAOb,QAAP,EAAiBC,QAAjB,KAA8B;AACnCD,IAAAA,QAAQ,CAACS,kBAAkB,EAAnB,CAAR;;AACA,QAAI;AACF,YAAMP,MAAM,GAAG,MAAMpB,KAAK,CAACqB,GAAN,gDACqBU,IADrB,EAArB;AAGA,YAAMT,UAAU,GAAGF,MAAnB;;AACA,UAAIE,UAAU,CAACN,KAAf,EAAsB;AACpB,cAAM,IAAIO,KAAJ,CAAUD,UAAU,CAACN,KAArB,CAAN;AACD;;AACD,aAAOE,QAAQ,CAACU,kBAAkB,CAACN,UAAU,CAACE,IAAZ,CAAnB,CAAf;AACD,KATD,CASE,OAAOC,CAAP,EAAU;AACVP,MAAAA,QAAQ,CAACW,kBAAkB,CAACJ,CAAC,CAACC,OAAH,CAAnB,CAAR;AACD;AACF,GAdD;AAeD","sourcesContent":["import axios from \"axios\";\nexport const GET_USERS_REQUEST = \"GET_USERS_REQUEST\";\nexport const GET_USERS_SUCCESS = \"GET_USERS_SUCCESS\";\nexport const GET_USERS_FAILURE = \"GET_USERS_FAILURE\";\nexport const SEARCH_USERS_REQUEST = \"SEARCH_USERS_REQUEST\";\nexport const SEARCH_USERS_SUCCESS = \"SEARCH_USERS_SUCCESS\";\nexport const SEARCH_USERS_FAILURE = \"SEARCH_USERS_FAILURE\";\nexport const REQUESTING = \"Requesting\";\nexport const SUCCESS = \"Success\";\nexport const ERROR = \"Error\";\nexport function getUsersRequest() {\n  return {\n    type: GET_USERS_REQUEST,\n    status: REQUESTING\n  };\n}\nexport function getUsersSuccess(userDetails) {\n  return {\n    type: GET_USERS_SUCCESS,\n    status: SUCCESS,\n    userDetails\n  };\n}\nexport function getUsersFailure(error) {\n  return {\n    type: GET_USERS_FAILURE,\n    status: ERROR,\n    error\n  };\n}\nexport function getUsers() {\n  return async (dispatch, getState) => {\n    dispatch(getUsersRequest());\n    try {\n      const result = await axios.get(\n        `https://api.github.com/users/supreetsingh247`\n      );\n      const resultJson = result;\n      if (resultJson.error) {\n        throw new Error(resultJson.error);\n      }\n      return dispatch(getUsersSuccess(resultJson.data));\n    } catch (e) {\n      dispatch(getUsersFailure(e.message));\n    }\n  };\n}\nexport function searchUsersRequest() {\n  return {\n    type: SEARCH_USERS_REQUEST,\n    status: REQUESTING\n  };\n}\nexport function searchUsersSuccess(userDetails) {\n  return {\n    type: SEARCH_USERS_SUCCESS,\n    status: SUCCESS,\n    userDetails\n  };\n}\nexport function searchUsersFailure(error) {\n  return {\n    type: SEARCH_USERS_FAILURE,\n    status: ERROR,\n    error\n  };\n}\nexport function searchUsers(user) {\n  return async (dispatch, getState) => {\n    dispatch(searchUsersRequest());\n    try {\n      const result = await axios.get(\n        `http://api.github.com/search/users?q=${user}`\n      );\n      const resultJson = result;\n      if (resultJson.error) {\n        throw new Error(resultJson.error);\n      }\n      return dispatch(searchUsersSuccess(resultJson.data));\n    } catch (e) {\n      dispatch(searchUsersFailure(e.message));\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}