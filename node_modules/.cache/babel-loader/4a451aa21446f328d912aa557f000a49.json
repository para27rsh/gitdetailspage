{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport UserCard from \"../component/UserCard.js\";\nimport { getUsers } from \"../actions/user.action.js\";\nimport { searchUserRepo } from \"../actions/repo.action\";\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUsers: () => {\n      dispatch(getUsers());\n    },\n    searchUserRepo: () => {\n      dispatch(searchUserRepo());\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.userReducer.userDetails,\n    repoData: state.repoReducers.repoDetails\n  };\n};\n\nconst UserCardContainer = withRouter(connect(mapStateToProps, mapDispatchToProps)(UserCard));\nexport default UserCardContainer;","map":{"version":3,"sources":["/home/shivamxelp/git-mini-project/src/containers/UserCardContainer.js"],"names":["connect","withRouter","UserCard","getUsers","searchUserRepo","mapDispatchToProps","dispatch","mapStateToProps","state","userData","userReducer","userDetails","repoData","repoReducers","repoDetails","UserCardContainer"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,SAASC,cAAT,QAA+B,wBAA/B;;AAEA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLH,IAAAA,QAAQ,EAAE,MAAM;AACdG,MAAAA,QAAQ,CAACH,QAAQ,EAAT,CAAR;AACD,KAHI;AAILC,IAAAA,cAAc,EAAE,MAAM;AACpBE,MAAAA,QAAQ,CAACF,cAAc,EAAf,CAAR;AACD;AANI,GAAP;AAQD,CATD;;AAUA,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,QAAQ,EAAED,KAAK,CAACE,WAAN,CAAkBC,WADvB;AAELC,IAAAA,QAAQ,EAAEJ,KAAK,CAACK,YAAN,CAAmBC;AAFxB,GAAP;AAID,CALD;;AAOA,MAAMC,iBAAiB,GAAGd,UAAU,CAClCD,OAAO,CAACO,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CH,QAA7C,CADkC,CAApC;AAGA,eAAea,iBAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport UserCard from \"../component/UserCard.js\";\nimport { getUsers } from \"../actions/user.action.js\";\nimport { searchUserRepo } from \"../actions/repo.action\";\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUsers: () => {\n      dispatch(getUsers());\n    },\n    searchUserRepo: () => {\n      dispatch(searchUserRepo());\n    }\n  };\n};\nconst mapStateToProps = state => {\n  return {\n    userData: state.userReducer.userDetails,\n    repoData: state.repoReducers.repoDetails\n  };\n};\n\nconst UserCardContainer = withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(UserCard)\n);\nexport default UserCardContainer;\n"]},"metadata":{},"sourceType":"module"}